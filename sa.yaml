apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: roboshop
  name: sa-secret-reader
rules:
- apiGroups: ["*"] # "" indicates the core API group
  resources: ["*"] # nouns
  verbs: ["*"] #actions

---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "anilRBAC" to read pods in the "roboshop" namespace.
# You need to already have a Role named "roboshop-trainee" in that namespace.
kind: RoleBinding
metadata:
  name: sa-secret-reader
  namespace: roboshop
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: roboshop-mysql-secret-reader # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: sa-secret-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io

---

# create a pod for checking SA is able to access the data or not
# aws-cli

apiVersion: v1
kind: Pod
metadata:
  name: aws-cli
  namespace: roboshop
spec:
  serviceAccount: roboshop-mysql-secret-reader
  containers:
    - name: aws-cli
      image: amazon/aws-cli
      command: ["sleep", "10000"]
